<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<body topmargin=50 leftmargin=50>
	<script src = "http://ajax.googleapis.com/ajax/libs/angularjs/1.4.2/angular.min.js"></script>
	<script src = "http://ajax.googleapis.com/ajax/libs/angularjs/1.4.2/angular-route.min.js"></script>
	<script src = "js/tournamentSetupService.js"></script>
	<script src = "js/tournamentCrudService.js"></script>
	<script src = "js/utilsService.js"></script>
	<style>
		.inputlabel {float:left; clear:both; text-align:right; padding:5px; width:150px;}
		.inputwrapper {float:left; padding:5px;}
		body, select, input[type='button']{font: 11px arial;}
		#divAjaxError {color:red;}
	</style>
	
	<div ng-app="tournamentApp" ng-controller="tournamentController">
	
		<a href="#/parameters">parameters</a>&nbsp;&nbsp;
	
		<a href="#/tournament">tournament</a>
		
		<div ng-view></div>
		
		<script type="text/ng-template" id="tournament.htm">
			// TODO: Make a custom directive to display the json graphically as brackets - https://docs.angularjs.org/guide/directive
			<textarea cols=100 rows=30>{{tournament}}</textarea>
		</script>		
		
	</div>
	
	<script>
		var CRUD_SVC_URL = '/tournament/ws/rest/tournament/demo';
		var SETUP_SVC_URL = CRUD_SVC_URL + '/parms';
		
		var app = angular.module("tournamentApp", ['ngRoute']);

		app.config(['$routeProvider', function($routeProvider){
			$routeProvider
				.when('/parameters', {
					templateUrl: 'tournamentParameters.htm',
					controller: 'tournamentController'
				})
				.when('/tournament', {
					templateUrl: 'tournament.htm',
					controller: 'tournamentController'
				})
				.otherwise({
					redirectTo: '/parameters'
				});
		}]);
		
		app.controller("tournamentController", function($scope, $routeParams, $location, setupService, crudService, utilsService) {

			// Get an ajax promise for the model (dropdown options) and their default selections.
			setupService.setUrl(SETUP_SVC_URL);
			setupService.getModelOptions().then(
				function(options){
					$scope.model = options;
					$scope.tournamentParms = setupService.getDefaultSelections;
					$scope.tournament = crudService.getData();
				},
				function(error) {
					utilsService.displayAjaxError(error, $scope);
				}
			);
			
			// Define an event to get an ajax promise to aquire the tournament json.
			$scope.getTournament = function() {
				crudService.getTournamentData($scope.tournamentParms).then(
					function(data){
						/**
						 * Cannot set the scope with data because changing the route to '/tournament' will reset the scope 
						 * and the data will be lost. Instead, using the fact that the crudServiceProvider is a singleton 
						 * and will not be reset, we can store the data there and then use a crudService.getData() to reset 
						 * the scope when this controller is re-run when the route is changed.
						 */
						$location.url('/tournament'); // change the route to view the json data of the tournament.
					},
					function(error) {
						utilsService.displayAjaxError(error, $scope);
					}
				);
			};
		});

		// Setup injection for the various services.
		app.factory("utilsService", tournamentUtilsFactory);
		app.factory("setupService", tournamentSetupFactory);
		// There is no reason to use a provider here instead of a factory. Just trying new things out.
		app.provider("crudService", tournamentCrudProvider);
		app.config(function(crudServiceProvider){
			crudServiceProvider.setUrl(CRUD_SVC_URL);
		});

	</script>
</body>
</html>